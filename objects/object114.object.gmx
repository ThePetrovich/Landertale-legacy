<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>application_surface_enable(false);
block_width = 32; block_height = 32;
blocks_horizontally = room_width / block_width; blocks_vertically = room_height / block_height;
bl_init();
bl_rectangle = bl_rectangle_create(blocks_horizontally, blocks_vertically, block_width, block_height, 2);
block_grid = ds_grid_create(blocks_horizontally, blocks_vertically);
sf_blocks = -1;
mask_lighting_against_blocks = true;
sf_mask_lighting_against_blocks = -1;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (!surface_exists(sf_blocks)) {
    sf_blocks = surface_create(room_width, room_height);
    surface_set_target(sf_blocks);
        draw_enable_alphablend(false);
            draw_clear_alpha(c_black, 0);
            var t_x, t_y;
            for (t_y = 0; t_y &lt; blocks_vertically; ++t_y)
            for (t_x = 0; t_x &lt; blocks_horizontally; ++t_x)
        draw_enable_alphablend(true);
    surface_reset_target();
}
if (mask_lighting_against_blocks) {
    if (!surface_exists(sf_mask_lighting_against_blocks)) sf_mask_lighting_against_blocks = surface_create(room_width, room_height);
    surface_copy(sf_mask_lighting_against_blocks, 0, 0, sf_blocks);
    surface_set_target(sf_mask_lighting_against_blocks);
        bl_rectangle_draw(bl_rectangle, block_grid, 0, 0, blocks_horizontally, blocks_vertically, 0, 0, c_black);
    surface_reset_target();
    draw_surface(sf_mask_lighting_against_blocks, 0, 0);
} else {
    draw_surface(sf_blocks, 0, 0);
    bl_rectangle_draw(bl_rectangle, block_grid, 0, 0, blocks_horizontally, blocks_vertically, 0, 0, c_black);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
